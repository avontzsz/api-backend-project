openapi: 3.0.0
info:
  title: Organiza API
  description: API para o app de finanças 'Organiza', com funcionalidades de autenticação e gerenciamento de usuários.
  version: 1.0.0
  contact:
    name: Sua Equipe de Desenvolvimento
    email: seuemail@exemplo.com
servers:
  - url: 'http://localhost:3000'
    description: Servidor de Desenvolvimento

paths:
  /register:
    post:
      summary: Registra um novo usuário
      operationId: registerUser
      requestBody:
        description: Informações de registro do usuário
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: E-mail do usuário
                password:
                  type: string
                  description: Senha do usuário
      responses:
        '201':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  id:
                    type: integer
                    description: ID do usuário registrado
        '400':
          description: E-mail já registrado
        '500':
          description: Erro no servidor

  /login:
    post:
      summary: Realiza o login e gera um token JWT
      operationId: loginUser
      requestBody:
        description: Informações de login do usuário
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: E-mail do usuário
                password:
                  type: string
                  description: Senha do usuário
      responses:
        '200':
          description: Login bem-sucedido, token gerado
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Token JWT gerado
        '401':
          description: Credenciais inválidas
        '500':
          description: Erro no servidor

  /delete/{email}:
    delete:
      summary: Exclui um usuário pelo e-mail
      operationId: deleteUser
      parameters:
        - name: email
          in: path
          required: true
          description: E-mail do usuário a ser excluído
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Usuário deletado com sucesso
        '404':
          description: Usuário não encontrado
        '500':
          description: Erro ao deletar o usuário

  /api/protected:
    get:
      summary: Endpoint protegido que exige autenticação
      operationId: protectedEndpoint
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Acesso permitido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Acesso permitido'
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
        '403':
          description: Token não fornecido ou inválido

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        id:
          type: integer
